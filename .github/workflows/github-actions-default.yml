name: Default Action
on: 
  push:
    tags:
      - release-v**
env:
  REGION_ID: cn-hangzhou
  REGISTRY: registry.cn-hangzhou.aliyuncs.com
  NAMESPACE: monve

  REPOSITORY: ${{ github.repository }}
  TAG: ${{ github.ref }}

permissions:
  contents: read

jobs:
  Default-Actions:
    runs-on: ubuntu-latest
    environment: production
    
    steps:
      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v3
      - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "üñ•Ô∏è The workflow is now ready to test your code on the runner."
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
      - run: echo "üçè This job's status is ${{ job.status }}."
      - run: pwd

      # 1.1 Login to ACR   
      - name: Login to ACR with the AccessKey pair
        uses: aliyun/acr-login@v1
        with:
          region-id: "${{ env.REGION_ID }}"
          access-key-id: "${{ secrets.ACCESS_KEY_ID }}"
          access-key-secret: "${{ secrets.ACCESS_KEY_SECRET }}"
      
      # 1.2 Buid and push image to ACR   
      - name: Build and push image to ACR  
        run: |
          VERSION=${TAG//*release-v/}
          echo $VERSION
          PROJECT_NAME=${REPOSITORY//*\//}
          echo $PROJECT_NAME
          docker build --tag "$REGISTRY/$NAMESPACE/$PROJECT_NAME:$VERSION" .  
          docker push "$REGISTRY/$NAMESPACE/$PROJECT_NAME:$VERSION"

